{
  "moduleInfo": {
    "moduleName": "French-Stream",
    "moduleInitials": "FS",
    "moduleDesc": "Module Ketsu pour French-Stream, changer le resolver pour changer la langue des films",
    "developer": "ナビル",
    "moduleID": "12131121",
    "moduleImage": "https://i.postimg.cc/gkyWt2kQ/fstream-logo.png",
    "moduleVersion": 2.81,
    "changelog": "Réparation complète",
    "moduleLenguage": "Fr",
    "moduleType": "Video",
    "nsfw": false,
    "baseURL": "https://web.french-stream.bio/",
    "moduleDeveloperSite": "https://bilnaa.github.io/main",
    "UpdateSite": "https://raw.githubusercontent.com/Bilnaa/bilnaa.github.io/main/FrenchStream/FrenchStream.json",
    "preferedServer": "FEMBED",
    "preferedDownloadServer": "FEMBED",
    "blackListed": [ "" ]
  },
  "global": {
    "variables": [ {
      "key": "",
      "value": ""
    } ],
    "cookies": [ {
      "key": "",
      "value": ""
    } ],
    "headers": [ {
      "key": "",
      "value": ""
    } ]
  },
  "mainPage": [
    {
      "request": {
        "url": "https://web.french-stream.bio/",
        "method": "get",
        "headers": [
          {
            "key": "",
            "value": ""
          }
        ],
        "httpBody": null
      },
      "extra": {
        "commands": [
          {
            "commandName": "",
            "params": [
              {
                "key": "",
                "value": ""
              }
            ]
          }
        ],
        "extraInfo": [
          {
            "key": "",
            "value": ""
          }
        ]
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": "const DefaultLayouts = { ultraWideFull : 'ultraWideFull', ultraWide : 'ultraWide', wideFull : 'wideFull', wide : 'wide', wideStrechedFull : 'wideStrechedFull', wideStrechedFullDouble : 'WideStrechedFullDouble', wideStreched : 'wideStreched', wideStrechedDouble : 'wideStrechedDouble', wideStrechedFullList : 'wideStrechedFullList', wideStrechedList : 'wideStrechedList', doublets : 'doublets', doubletsDouble : 'doubletsDouble', doubletsFull : 'doubletsFull', doubletsFullDouble : 'doubletsFullDouble', doubletsConstant : 'doubletsConstant', doubletsDoubleConstant : 'doubletsDoubleConstant', doubletsFullConstant : 'doubletsFullConstant', doubletsFullDoubleConstant : 'doubletsFullDoubleConstant', longDoublets : 'longDoublets', longDoubletsDouble : 'longDoubletsDouble', longDoubletsFull : 'longDoubletsFull', longDoubletsFullDouble : 'longDoubletsFullDouble', longDoubletsConstant : 'longDoubletsConstant', longDoubletsDoubleConstant : 'longDoubletsDoubleConstant', longDoubletsFullConstant : 'longDoubletsFullConstant', longDoubletsFullDoubleConstant : 'longDoubletsFullDoubleConstant', triplets : 'triplets', tripletsDouble : 'tripletsDouble', tripletsFull : 'tripletsFull', tripletsFullDouble : 'tripletsFullDouble', tripletsConstant : 'tripletsConstant', tripletsDoubleConstant : 'tripletsDoubleConstant', tripletsFullConstant : 'tripletsFullConstant', tripletsFullDoubleConstant : 'tripletsFullDoubleConstant', longTriplets : 'longTriplets', longTripletsDouble : 'longTripletsDouble', longTripletsFull : 'longTripletsFull', longTripletsFullDouble : 'longTripletsFullDouble', longTripletsConstant : 'longTripletsConstant', longTripletsDoubleConstant : 'longTripletsDoubleConstant', longTripletsFullConstant : 'longTripletsFullConstant', longTripletsFullDoubleConstant : 'longTripletsFullDoubleConstant', none: ''}; const CellDesings = { Special1 : 'Special1', Special2 : 'Special2', Special3 : 'Special3', CELLHelperText : 'CELLHelperText', small1 : 'small1', small2 : 'small2', normal1 : 'normal1', normal2 : 'normal2', normal3 : 'normal3', normal4 : 'normal4', normal5 : 'normal5', normal7 : 'normal7', wide1 : 'wide1', wide2 : 'wide2', wide3 : 'wide3', wide4 : 'wide4', wide5 : 'wide5', wide6 : 'wide6', wide7 : 'wide7', wide8 : 'wide8', wide9 : 'wide9', wide10 : 'wide10', wide11 : 'wide11' }; const Paging = { leading : 'leading', centered : 'centered', none : '' };const Orientation = { horizontal : 'horizontal', vertical : 'vertical' }; function MainPage(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output(cellDesing, orientation, defaultLayout, paging, section, layout, data) { this.cellDesing = cellDesing; this.orientation = orientation; this.defaultLayout = defaultLayout; this.paging = paging; this.section = section; this.layout = layout; this.data = data;}function Section(sectionName, separator) { this.sectionName = sectionName; this.separator = separator;}function Data(image, title, description, field1, field2, field3, field4, isChapter, link,openInWebView) { this.image = image; this.title = title; this.description = description; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.isChapter = isChapter; this.link = link; this.openInWebView = openInWebView;} var savedData = document.getElementById('ketsu-final-data');const parsedJson = JSON.parse(savedData.innerHTML); const emptyKeyValue = [new KeyValue('','')]; var output = [];for (section of document.querySelectorAll('.sect')) { let dataArray = []; let sectionName = section.querySelector('.st-capt').textContent.trim(); for (short of section.querySelectorAll('.short-in')) { let image = short.querySelector('img').src; image = new ModuleRequest(image, 'get', emptyKeyValue, null); let title = short.querySelector('.short-title').textContent.trim(); let field1 = short.querySelector('.short-qual').textContent.trim(); let language = short.querySelector('.short-label').textContent.trim(); let link = short.querySelector('.short-poster').href; link = new ModuleRequest(link, 'get', emptyKeyValue, null); dataArray.push(new Data(image, title, '', field1, language, '', '', false, link)); } output.push(new Output(CellDesings.normal1,Orientation.horizontal,DefaultLayouts.longDoubletsDoubleConstant,Paging.leading, new Section(sectionName, true), null, dataArray));} const mainPageObject = new MainPage(new ModuleRequest('','get',emptyKeyValue,null),new Extra([new Commands('',emptyKeyValue)],emptyKeyValue),new JavascriptConfig(true,false,''),output);savedData.innerHTML = JSON.stringify(mainPageObject);"
      },
      "output": [
        {
          "cellDesing": "normal1",
          "orientation": "vertical",
          "defaultLayout": "wide",
          "paging": "",
          "section": {
            "sectionName": "",
            "separator": false
          },
          "layout": {
            "insets": {
              "top": 0,
              "bottom": 0,
              "left": 0,
              "right": 0
            },
            "visibleCellsWidthS": 2,
            "visibleCellsWidthM": 2,
            "visibleCellsWidthL": 2,
            "visibleCellsHeight": 2,
            "heightForVisibleCells": 400,
            "cellSize": {
              "width": 300,
              "height": 300
            },
            "ratio": {
              "inRelation": "width",
              "number1": 1,
              "number2": 2
            },
            "constant": {
              "width": 1,
              "height": 2
            },
            "horizontalSpacing": 0,
            "verticalSpacing": 0
          },
          "data": [
            {
              "image": {
                "url": "",
                "method": "get",
                "headers": [
                  {
                    "key": "",
                    "value": ""
                  }
                ],
                "httpBody": null
              },
              "title": "",
              "description": "",
              "field1": "",
              "field2": "",
              "field3": "",
              "field4": "",
              "openInWebView" : false,
              "isChapter": false,
              "link": {
                "url": "",
                "method": "",
                "headers": [
                  {
                    "key": "",
                    "value": ""
                  }
                ],
                "httpBody": null
              }
            }
          ]
        }
      ]
    }
  ],
  "search": [
    {
      "request": {
        "url": "https://web.french-stream.bio/index.php/search/?story=<searched>&do=search&search_start=<page>&subaction=search&submit=Submit/",
        "method": "get",
        "headers": [
          {
            "key": "",
            "value": ""
          }
        ],
        "httpBody": null
      },
      "separator": "+",
      "extra": {
        "commands": [
          {
            "commandName": "",
            "params": [
              {
                "key": "",
                "value": ""
              }
            ]
          }
        ],
        "extraInfo": [
          {
            "key": "",
            "value": ""
          }
        ]
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": "const DefaultLayouts = { ultraWideFull : 'ultraWideFull', ultraWide : 'ultraWide', wideFull : 'wideFull', wide : 'wide', wideStrechedFull : 'wideStrechedFull', wideStrechedFullDouble : 'WideStrechedFullDouble', wideStreched : 'wideStreched', wideStrechedDouble : 'wideStrechedDouble', wideStrechedFullList : 'wideStrechedFullList', wideStrechedList : 'wideStrechedList', doublets : 'doublets', doubletsDouble : 'doubletsDouble', doubletsFull : 'doubletsFull', doubletsFullDouble : 'doubletsFullDouble', doubletsConstant : 'doubletsConstant', doubletsDoubleConstant : 'doubletsDoubleConstant', doubletsFullConstant : 'doubletsFullConstant', doubletsFullDoubleConstant : 'doubletsFullDoubleConstant', longDoublets : 'longDoublets', longDoubletsDouble : 'longDoubletsDouble', longDoubletsFull : 'longDoubletsFull', longDoubletsFullDouble : 'longDoubletsFullDouble', longDoubletsConstant : 'longDoubletsConstant', longDoubletsDoubleConstant : 'longDoubletsDoubleConstant', longDoubletsFullConstant : 'longDoubletsFullConstant', longDoubletsFullDoubleConstant : 'longDoubletsFullDoubleConstant', triplets : 'triplets', tripletsDouble : 'tripletsDouble', tripletsFull : 'tripletsFull', tripletsFullDouble : 'tripletsFullDouble', tripletsConstant : 'tripletsConstant', tripletsDoubleConstant : 'tripletsDoubleConstant', tripletsFullConstant : 'tripletsFullConstant', tripletsFullDoubleConstant : 'tripletsFullDoubleConstant', longTriplets : 'longTriplets', longTripletsDouble : 'longTripletsDouble', longTripletsFull : 'longTripletsFull', longTripletsFullDouble : 'longTripletsFullDouble', longTripletsConstant : 'longTripletsConstant', longTripletsDoubleConstant : 'longTripletsDoubleConstant', longTripletsFullConstant : 'longTripletsFullConstant', longTripletsFullDoubleConstant : 'longTripletsFullDoubleConstant', none: ''}; const CellDesings = { Special1 : 'Special1', Special2 : 'Special2', Special3 : 'Special3', CELLHelperText : 'CELLHelperText', small1 : 'small1', small2 : 'small2', normal1 : 'normal1', normal2 : 'normal2', normal3 : 'normal3', normal4 : 'normal4', normal5 : 'normal5', normal7 : 'normal7', wide1 : 'wide1', wide2 : 'wide2', wide3 : 'wide3', wide4 : 'wide4', wide5 : 'wide5', wide6 : 'wide6', wide7 : 'wide7', wide8 : 'wide8', wide9 : 'wide9', wide10 : 'wide10', wide11 : 'wide11'}; const Paging = { leading : 'leading', centered : 'centered', none : '' };const Orientation = { horizontal : 'horizontal', vertical : 'vertical' };function Search(request,extra,separator,javascriptConfig,output) { this.request = request; this.extra = extra; this.separator = separator; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url,method,headers,httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands,extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName,params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript,loadInWebView,javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key,value) { this.key = key; this.value = value;}function Output(cellDesing,orientation,defaultLayout,paging,section,layout,data) { this.cellDesing = cellDesing; this.orientation = orientation; this.defaultLayout = defaultLayout; this.paging = paging; this.section = section; this.layout = layout; this.data = data;}function Section(sectionName,separator) { this.sectionName = sectionName; this.separator = separator;}function Data(image,title,description,field1,field2,field3,field4,isChapter,link,openInWebView) { this.image = image; this.title = title; this.description = description; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.isChapter = isChapter; this.link = link; this.openInWebView = openInWebView;}var savedData = document.getElementById('ketsu-final-data');const parsedJson = JSON.parse(savedData.innerHTML); const emptyKeyValue = [new KeyValue('','')];var output = [];var searchArray = [];for (short of document.querySelectorAll('.short-in')) { let img = short.querySelector('img').src; if (!img.includes('https://')) { img = parsedJson.request.url.split('/index')[0] + img} img = new ModuleRequest(img, 'get', emptyKeyValue, null); let title = short.querySelector('.short-title').textContent.trim(); let field1 = ''; try { field1 = short.querySelector('.short-qual').textContent.trim(); } catch{} let language = ''; try { language = short.querySelector('.short-label').textContent.trim(); } catch{} let link = short.querySelector('.short-poster').href; link = new ModuleRequest(link, 'get', emptyKeyValue, null); searchArray.push(new Data(img, title, '', field1, language, '', '', false, link));}output.push(new Output(CellDesings.normal1,Orientation.vertical,DefaultLayouts.longDoubletsFullConstant,Paging.leading, new Section('', true), null, searchArray));const searchPageObject = new Search(new ModuleRequest('','',emptyKeyValue,null),new Extra([new Commands('',emptyKeyValue)],emptyKeyValue),'',new JavascriptConfig(true,false,''),output);savedData.innerHTML = JSON.stringify(searchPageObject);"
      },
      "output": [
        {
          "cellDesing": "normal1",
          "orientation": "vertical",
          "defaultLayout": "wide",
          "paging": "",
          "section": {
            "sectionName": "",
            "separator": false
          },
          "layout": {
            "insets": {
              "top": 0,
              "bottom": 0,
              "left": 0,
              "right": 0
            },
            "visibleCellsWidthS": 2,
            "visibleCellsWidthM": 2,
            "visibleCellsWidthL": 2,
            "visibleCellsHeight": 2,
            "heightForVisibleCells": 400,
            "cellSize": {
              "width": 300,
              "height": 300
            },
            "ratio": {
              "inRelation": "width",
              "number1": 1,
              "number2": 2
            },
            "constant": {
              "width": 1,
              "height": 2
            },
            "horizontalSpacing": 0,
            "verticalSpacing": 0
          },
          "data": [
            {
              "image": {
                "url": "",
                "method": "get",
                "headers": [
                  {
                    "key": "",
                    "value": ""
                  }
                ],
                "httpBody": null
              },
              "title": "",
              "description": "",
              "field1": "",
              "field2": "",
              "field3": "",
              "field4": "",
              "openInWebView" : false,
              "isChapter": false,
              "link": {
                "url": "empty",
                "method": "get",
                "headers": [
                  {
                    "key": "key",
                    "value": "value"
                  }
                ],
                "httpBody": null
              }
            }
          ]
        }
      ]
    }
  ],
  "info": [
    {
      "request": {
        "url": "",
        "method": "get",
        "headers": [
          {
            "key": "",
            "value": ""
          }
        ],
        "httpBody": null
      },
      "extra": {
        "commands": [
          {
            "commandName": "",
            "params": [
              {
                "key": "",
                "value": ""
              }
            ]
          }
        ],
        "extraInfo": [
          {
            "key": "",
            "value": ""
          }
        ]
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": "function Info(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Chapter(chapName, link,openInWebView) { this.chapName = chapName; this.link = link; this.openInWebView = openInWebView;}function Output(image, title, link, description, genres, field1, field2, field3, field4, chapters) { this.image = image; this.link = link; this.title = title; this.description = description; this.genres = genres; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.chapters = chapters;}var savedData = document.getElementById('ketsu-final-data');const parsedJson = JSON.parse(savedData.innerHTML);const emptyKeyValue = [new KeyValue('', '')];let image = document.querySelector('.fposter > img').src;image = new ModuleRequest(image,'get',emptyKeyValue,null);let title = document.querySelector('#s-title').textContent.trim();let desc = Array.from(document.querySelectorAll('.flist.clearfix li')).slice(-1)[0].textContent;let genres = Array.from(document.querySelectorAll('.flist-col a')).map(genre => genre.textContent);let origin = document.querySelectorAll('.flist-col li')[1].textContent;let type = parsedJson.request.url.split('stream-')[1].split('/')[0];let episodes = [];if (type.includes('film')) { episodes.push(new Chapter(title, new ModuleRequest(parsedJson.request.url, 'get', emptyKeyValue, null), false)) }else { const versions = ['VF','VOSTFR']; for (x in versions) { let version = versions[x]; for (ep of document.querySelectorAll('.fx-row .elink')[x].querySelectorAll('p')) { let link = `${parsedJson.request.url}#${ep.getAttribute('onclick').split('\\'')[3]}`; episodes.push(new Chapter(version+' '+ep.textContent, new ModuleRequest(link, 'get', emptyKeyValue, null), false)); } }}const infoPageObject = new Info(new ModuleRequest('', '', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), new JavascriptConfig(false, false, ''), new Output(image, title, parsedJson.request, desc, genres, origin, '', type, 'Eps: '+ episodes.length, episodes));savedData.innerHTML = JSON.stringify(infoPageObject);"
      },
      "output": {
        "image": {
          "url": "",
          "method": "get",
          "headers": [
            {
              "key": "",
              "value": ""
            }
          ],
          "httpBody": null
        },
        "link": {
          "url": "",
          "method": "get",
          "headers": [
            {
              "key": "",
              "value": ""
            }
          ],
          "httpBody": null
        },
        "title": "",
        "description": "",
        "genres": [
          ""
        ],
        "field1": "",
        "field2": "",
        "field3": "",
        "field4": "",
        "chapters": [
          {
            "chapName": "",
            "openInWebView": false,
            "link": {
              "url": "empty",
              "method": "get",
              "headers": [
                {
                  "key": "key",
                  "value": "value"
                }
              ],
              "httpBody": null
            }
          }
        ]
      }
    }
  ],
  "chapters": [
    {
      "request": {
        "url": "",
        "method": "get",
        "headers": [
          {
            "key": "key",
            "value": "value"
          }
        ],
        "httpBody": null
      },
      "extra": {
        "commands": [
          {
            "commandName": "",
            "params": [
              {
                "key": "",
                "value": ""
              }
            ]
          }
        ],
        "extraInfo": [
          {
            "key": "",
            "value": ""
          }
        ]
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": "function Chapters(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output( videos, images, text) { this.videos = videos; this.images = images; this.text = text;} var savedData = document.getElementById('ketsu-final-data');const parsedJson = JSON.parse(savedData.innerHTML);const refererKeyValue = [new KeyValue('Referer', parsedJson.request.url.split('#')[0])]; var extraInfo = [refererKeyValue[0], new KeyValue('count','0')];if (parsedJson.request.url.includes('film')) { var element = '.fx-row' }else { var element = '#'+parsedJson.request.url.split('#')[1] }var i = 0;for (player of document.querySelector(element).querySelectorAll('a')) { let link = parsedJson.request.url.split('/french-stream')[0] + player.getAttribute('onclick').split('\\'')[1]; if (i == 0) { var nextRequest = link; } else { extraInfo.push(new KeyValue(''+(i-1), link)); } i++;}const chaptersPageObject = new Chapters(new ModuleRequest(nextRequest, 'get', refererKeyValue, null), new Extra([new Commands('', refererKeyValue)], extraInfo), new JavascriptConfig(true, false, ''), new Output( null, null, null));savedData.innerHTML = JSON.stringify(chaptersPageObject);"
      },
      "output": {
        "videos": {
          "needsResolver": [
            {
              "resolverIdentifier": "",
              "link": {
                "url": "",
                "method": "get",
                "headers": [
                  {
                    "key": "key",
                    "value": "value"
                  }
                ],
                "httpBody": null
              }
            }
          ],
          "rawVideo": [
            {
              "video": [
                {
                  "videoQuality": "",
                  "videoLink": {
                    "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                    "method": "get",
                    "headers": [
                      {
                        "key": "key",
                        "value": "value"
                      }
                    ],
                    "httpBody": null
                  }
                }
              ]
            }
          ]
        },
        "images": [
          {
            "url": "empty",
            "method": "get",
            "headers": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "httpBody": null
          }
        ],
        "text": {
          "text": ""
        }
      }
    },{
      "request": {
        "url": "",
        "method": "get",
        "headers": [
          {
            "key": "key",
            "value": "value"
          }
        ],
        "httpBody": null
      },
      "extra": {
        "commands": [
          {
            "commandName": "",
            "params": [
              {
                "key": "",
                "value": ""
              }
            ]
          }
        ],
        "extraInfo": [
          {
            "key": "",
            "value": ""
          }
        ]
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": "function Chapters(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output( videos, images, text) { this.videos = videos; this.images = images; this.text = text;} function Videos(needsResolver, rawVideo) { this.needsResolver = needsResolver; this.rawVideo = rawVideo;}function NeedsResolver(resolverIdentifier, link) { this.resolverIdentifier = resolverIdentifier; this.link = link;}function getValueFromKey(keys,key) { for (var x = 0; x < keys.length; x++) { let tKey = keys[x]; if (tKey.key == key) { return tKey.value; } } return '';} var savedData = document.getElementById('ketsu-final-data');const parsedJson = JSON.parse(savedData.innerHTML);const emptyKeyValue = [new KeyValue('', '')];var output = parsedJson.output.videos;var extraInfo = parsedJson.extra.extraInfo;var count = getValueFromKey(extraInfo,'count');if (count == 0) { output = new Videos([],[]); }if (parsedJson.request.url.includes('frenchstream')) { let link = document.querySelector('iframe').src; if (!link.split('php')[0].includes('https:')) { link = 'https:'+link; } extraInfo.push(new KeyValue(''+(extraInfo.length-2), encodeURI(link)));} else if (parsedJson.request.url.includes('play.php')) { for (script of document.querySelectorAll('script')) { if (script.innerHTML.includes('eval(function')) { var newScript = document.createElement('script'); newScript.innerHTML = script.innerHTML.replace('return p', 'document.title = p; return p'); document.body.appendChild(newScript); break; } } let link = parsedJson.request.url.split('play')[0] + document.title.split('src')[1].split('\"')[1]; extraInfo.push(new KeyValue(''+(extraInfo.length-2), encodeURI(link)));} else if (parsedJson.request.url.includes('playback.php')) { let link = parsedJson.request.url.split('/play')[0] + document.querySelector('iframe').src; extraInfo.push(new KeyValue(''+(extraInfo.length-2), encodeURI(link)));} else { try { let link = document.querySelector('[property=\"og:url\"]').content; output.needsResolver.push(new NeedsResolver('', new ModuleRequest(link, 'get', emptyKeyValue, null))); } catch{}}var nextRequest = getValueFromKey(extraInfo,''+count);if (nextRequest.includes('play.php')) { var noJS = false }else { var noJS = true}extraInfo[1].value = ''+(parseInt(count) +1);const chaptersPageObject = new Chapters(new ModuleRequest(nextRequest, 'get', [extraInfo[0]], null), new Extra([new Commands('', emptyKeyValue)], extraInfo), new JavascriptConfig(noJS, false, ''), new Output( output, null, null));savedData.innerHTML = JSON.stringify(chaptersPageObject);"
      },
      "output": {
        "videos": {
          "needsResolver": [
            {
              "resolverIdentifier": "",
              "link": {
                "url": "",
                "method": "get",
                "headers": [
                  {
                    "key": "key",
                    "value": "value"
                  }
                ],
                "httpBody": null
              }
            }
          ],
          "rawVideo": [
            {
              "video": [
                {
                  "videoQuality": "",
                  "videoLink": {
                    "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                    "method": "get",
                    "headers": [
                      {
                        "key": "key",
                        "value": "value"
                      }
                    ],
                    "httpBody": null
                  }
                }
              ]
            }
          ]
        },
        "images": [
          {
            "url": "empty",
            "method": "get",
            "headers": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "httpBody": null
          }
        ],
        "text": {
          "text": ""
        }
      }
    }
  ],
  "moduleResolvers": [
    {
      "resolverInfo": {
        "resolverName": "EVOLOAD",
        "nameMatches": [
          "EVOLOAD"
        ],
        "developer": "ナビル",
        "moduleID": "230076042410",
        "resolverVersion": 1.00,
        "baseURL": "evoload.io"
      },
      "resolver": [
        {
          "request": {
            "url": "empty",
            "method": "get",
            "headers": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "httpBody": null
          },
          "extra": {
            "commands": [
              {
                "commandName": "",
                "params": [
                  {
                    "key": "",
                    "value": ""
                  }
                ]
              }
            ],
            "extraInfo": [
              {
                "key": "",
                "value": ""
              }
            ]
          },
          "javascriptConfig": {
            "removeJavascript": true,
            "loadInWebView": false,
            "javaScript": "function Resolver(request, extra, javascriptConfig, output) {this.request = request;this.extra = extra;this.javascriptConfig = javascriptConfig;this.output = output;}function ModuleRequest(url, method, headers, httpBody) {this.url = url;this.method = method;this.headers = headers;this.httpBody = httpBody;}function Extra(commands, extraInfo) {this.commands = commands;this.extraInfo = extraInfo;}function Commands(commandName, params) {this.commandName = commandName;this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) {this.removeJavascript = removeJavascript;this.loadInWebView = loadInWebView;this.javaScript = javaScript;}function KeyValue(key, value) {this.key = key;this.value = value;}function Output(video) {this.video = video;}function Video(videoQuality, videoLink) {this.videoQuality = videoQuality;this.videoLink = videoLink;}function getNext(match, array) {for (var x = 0; x < array.length; x++) {let mMatch = array[x];if (mMatch.includes(match)) {return array[x + 1];}}}var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);var emptyKeyValue = [new KeyValue('Referer', parsedJson.request.url)];var videos = [];var id = document.getElementById('captcha_pass').getAttribute('value');var nextRequest = `https://csrv.evosrv.com/captcha?${id}`;let emptyExtra = new Extra([new Commands('', emptyKeyValue)], emptyKeyValue);var chaptersObject = new Resolver(new ModuleRequest(nextRequest, 'get', emptyKeyValue, null), emptyExtra, new JavascriptConfig(false, false, ''), new Output(videos));var finalJson = JSON.stringify(chaptersObject);savedData.innerHTML = finalJson;"
          },
          "output": {
            "moduleID": "",
            "video": [
              {
                "videoQuality": "720",
                "videoLink": {
                  "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                  "method": "get",
                  "headers": [
                    {
                      "key": "key",
                      "value": "value"
                    }
                  ],
                  "httpBody": null
                }
              }
            ]
          }
        },
        {
          "request": {
            "url": "empty",
            "method": "get",
            "headers": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "httpBody": null
          },
          "extra": {
            "commands": [
              {
                "commandName": "",
                "params": [
                  {
                    "key": "",
                    "value": ""
                  }
                ]
              }
            ],
            "extraInfo": [
              {
                "key": "",
                "value": ""
              }
            ]
          },
          "javascriptConfig": {
            "removeJavascript": true,
            "loadInWebView": false,
            "javaScript": " function Resolver(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output; } function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody; } function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo; } function Commands(commandName, params) { this.commandName = commandName; this.params = params; } function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript; } function KeyValue(key, value) { this.key = key; this.value = value; } function Output(video) { this.video = video; } function Video(videoQuality, videoLink) { this.videoQuality = videoQuality; this.videoLink = videoLink; } function getNext(match, array) { for (var x = 0; x < array.length; x++) { let mMatch = array[x]; if (mMatch.includes(match)) { return array[x + 1]; } } } var savedData = document.getElementById('ketsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); var emptyKeyValue = [new KeyValue('Referer', parsedJson.request.url)]; var videos = []; var csrv = document.querySelector('script').innerText.replace('*/', '').replace('/*', '').trim(); var formdata = { 'code': parsedJson.request.headers[0].value.split('/')[4], 'csrv_token' : csrv, 'pass': parsedJson.request.url.split('?')[1], 'token': 'ok' }; var body = 'code=' + formdata.code + '&csrv_token=' + formdata.csrv_token + '&pass=' + formdata.pass + '&token=' + formdata.token; let emptyExtra = new Extra([new Commands('', emptyKeyValue)], emptyKeyValue); var chaptersObject = new Resolver(new ModuleRequest('https://evoload.io/SecurePlayer', 'post', emptyKeyValue, body), emptyExtra, new JavascriptConfig(false, false, ''), new Output(videos)); var finalJson = JSON.stringify(chaptersObject); savedData.innerHTML = finalJson;"
          },
          "output": {
            "moduleID": "",
            "video": [
              {
                "videoQuality": "720",
                "videoLink": {
                  "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                  "method": "get",
                  "headers": [
                    {
                      "key": "key",
                      "value": "value"
                    }
                  ],
                  "httpBody": null
                }
              }
            ]
          }
        },
        {
          "request": {
            "url": "empty",
            "method": "get",
            "headers": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "httpBody": null
          },
          "extra": {
            "commands": [
              {
                "commandName": "",
                "params": [
                  {
                    "key": "",
                    "value": ""
                  }
                ]
              }
            ],
            "extraInfo": [
              {
                "key": "",
                "value": ""
              }
            ]
          },
          "javascriptConfig": {
            "removeJavascript": true,
            "loadInWebView": false,
            "javaScript": " function Resolver(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output; } function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody; } function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo; } function Commands(commandName, params) { this.commandName = commandName; this.params = params; } function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript; } function KeyValue(key, value) { this.key = key; this.value = value; } function Output(video) { this.video = video; } function Video(videoQuality, videoLink) { this.videoQuality = videoQuality; this.videoLink = videoLink; } function getNext(match, array) { for (var x = 0; x < array.length; x++) { let mMatch = array[x]; if (mMatch.includes(match)) { return array[x + 1]; } } } var savedData = document.getElementById('ketsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); var emptyKeyValue = [new KeyValue('Referer', parsedJson.request.url)]; var videos = []; var script = document.querySelector('script').innerText.replace('*/', '').replace('/*', '').trim(); var json = JSON.parse(script); videos.push(new Video('Normal',new ModuleRequest(json.stream.src,'get',emptyKeyValue,null)));; let emptyExtra = new Extra([new Commands('', emptyKeyValue)], emptyKeyValue); var chaptersObject = new Resolver(new ModuleRequest('', 'POST', emptyKeyValue, null), emptyExtra, new JavascriptConfig(false, false, ''), new Output(videos)); var finalJson = JSON.stringify(chaptersObject); savedData.innerHTML = finalJson;"
          },
          "output": {
            "moduleID": "",
            "video": [
              {
                "videoQuality": "720",
                "videoLink": {
                  "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                  "method": "get",
                  "headers": [
                    {
                      "key": "key",
                      "value": "value"
                    }
                  ],
                  "httpBody": null
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "responseCodeFunctions": [
    {
      "code": 0,
      "msgTitle": "",
      "msgBody": "",
      "type": "normal",
      "functions": [
        {
          "request": {
            "url": "empty",
            "method": "get",
            "headers": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "httpBody": null
          },
          "extra": {
            "commands": [
              {
                "commandName": "",
                "params": [
                  {
                    "key": "",
                    "value": ""
                  }
                ]
              }
            ],
            "extraInfo": [
              {
                "key": "",
                "value": ""
              }
            ]
          },
          "javascriptConfig": {
            "removeJavascript": true,
            "loadInWebView": false,
            "javaScript": ""
          }
        }
      ]
    }
  ],
  "helperFunctions": [
    {
      "functionName": "example",
      "msgTitle": "",
      "msgBody": "",
      "type": "normal",
      "functions": [
        {
          "request": {
            "url": "empty",
            "method": "get",
            "headers": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "httpBody": null
          },
          "extra": {
            "commands": [
              {
                "commandName": "",
                "params": [
                  {
                    "key": "",
                    "value": ""
                  }
                ]
              }
            ],
            "extraInfo": [
              {
                "key": "",
                "value": ""
              }
            ]
          },
          "javascriptConfig": {
            "removeJavascript": true,
            "loadInWebView": false,
            "javaScript": ""
          }
        }
      ]
    }
  ]
}
